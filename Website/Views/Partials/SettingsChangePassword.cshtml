@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Core.Models.Member>

@{
    StartupCentral.Code.Model.ApiResponse formValidation = null;

    if (IsPost)
    {
        if (Model != null)
        {
            if (Request.Form["formaction"] == "accountForm")
            {
                string changepasswordone = Request.Form["changepasswordone"];
                string changepasswordrepeat = Request.Form["changepasswordrepeat"];
                if (!string.IsNullOrEmpty(changepasswordone) && !string.IsNullOrEmpty(changepasswordrepeat))
                {
                    formValidation = ValidateChanPass();
                    if (formValidation.Success)
                    {
                        ApplicationContext.Current.Services.MemberService.SavePassword(Model, changepasswordone);
                    }
                }
            }
        }
    }
}

    <form method="post" id="account-settings" class="delValidate settings-tab">
        <input hidden name="formaction" value="accountForm" />
        <div class="form-container">
            <label for="account">Ny adgangskode</label>
            <div class="input-container">
                <input id="passwordO" type="password" name="changepasswordone" minlength="6" autocomplete="off" required>
            </div>
        </div>
        <div class="form-container">
            <label for="password">Gentag den nye adgangskode</label>
            <div class="input-container">
                <input type="password" id="passwordC" name="changepasswordrepeat" minlength="6" autocomplete="off" required="">
            </div>
        </div>

        <p class="passwordresult">

        </p>

        @{
            if (formValidation != null && !formValidation.Success)
            {
                <p>
                    <font color="red">@formValidation.Message</font>
                </p>
            }
            else if (formValidation != null && formValidation.Success)
            {
                <p>
                    <font color="green">@formValidation.Message</font>
                </p>
            }
        }

        <button class="button" type="submit" id="changepass">Opdater</button>
    </form>

@functions {

    public StartupCentral.Code.Model.ApiResponse ValidateChanPass()
    {
        var currentUser = Members.GetCurrentMember();
        var _memberService = ApplicationContext.Current.Services.MemberService;
        var member = _memberService.GetById(currentUser.Id);

        if (member != null)
        {
            string changepasswordone = Request.Form["changepasswordone"];
            string changepasswordrepeat = Request.Form["changepasswordrepeat"];

            if (!string.IsNullOrEmpty(changepasswordone))
            {
                StartupCentral.Code.Controllers.PasswordController passwordController = new StartupCentral.Code.Controllers.PasswordController();
                var passwordValidation = passwordController.ValidatePasswords(changepasswordone, changepasswordrepeat);

                if (!passwordValidation.Success)
                {
                    return passwordValidation;
                }
            }

            return new StartupCentral.Code.Model.ApiResponse(true, "Ændringer er hermed gemt.");
        }

        return new StartupCentral.Code.Model.ApiResponse(false, "Brugeren kunne ikke findes?!");
    }
}

<script>
    $(document).ready(function () {
        $('#passwordC').on('keyup', function () {
            if ($('#passwordO').val() == $('#passwordC').val())
                $('.passwordresult').html('De er ens.');
            else
                $('.passwordresult').html('Adgangskoder stemmer ikke overens.');
        });
    });
</script>

