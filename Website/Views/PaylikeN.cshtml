@using StartupCentral.Code.Class;
@inherits Umbraco.Web.Mvc.UmbracoViewPage

@{
    Layout = "MasterNoIndex.cshtml";

    string titleSize = String.Concat(Umbraco.AssignedContentItem.Value<double>("titleSize").ToString("0.00", System.Globalization.CultureInfo.InvariantCulture), "rem;");
    string subTitleSize = String.Concat(Umbraco.AssignedContentItem.Value<double>("subTitleSize").ToString("0.00", System.Globalization.CultureInfo.InvariantCulture), "rem;");
    string sectionTitleSize = String.Concat(Umbraco.AssignedContentItem.Value<double>("sectionTitleSize").ToString("0.00", System.Globalization.CultureInfo.InvariantCulture), "rem;");

    IMember member = null;

    if (Request.QueryString["memberkey"] != null)
    {
        member = ApplicationContext.Current.Services.MemberService.GetByKey(new Guid(Request.QueryString["memberkey"]));
    }

    if (member != null)
    {
        UpodiWrapperService UpodiWrapperService = new StartupCentral.Code.Class.UpodiWrapperService();
        UpodiWrapperService.CreateNewCustomer(member.Id, member);
        string PromoKode = Request.QueryString["promokode"];
    }

    <script>
        var userToken = ''
        @if (member != null)
        {
            @Html.Raw(string.Concat("userToken = '", StartupCentral.Code.Controllers.UserController.IssueTokenIfEmpty(member), "';"))
        }
    </script>
}

<main id="sc-payment">
    <section>
        <div class="row-container">
            <div class="row">
                <div class="column-container">
                    <div class="column centered" style="height:auto">
                        <h2 class="headline-2" style="font-size:@titleSize">@Model.Value("title")</h2>
                        <h3 style="font-size:@subTitleSize">@Model.Value("subtitle")</h3>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="column-container">
                    <div class="column centered" style="height:auto">
                        <div class="price-card-container">
                            @foreach (var card in Umbraco.Content(26278).Children().Where(x => x.IsVisible()))
                            {
                                string pricingCardV = card.Value<string>("pricingCardV");
                                bool highlighted = card.Value<bool>("pricingCardHighlighted");
                                bool banner = card.Value<bool>("pricingCardBanner");
                                var cardTitle = card.Name;
                                int cardPrice = card.Value<int>("pricingCardPrice");
                                var cardDescription = card.Value<string>("pricingCardDescription");
                                var cardBindingInfo = card.Value<string>("pricingCardBindingInfo");
                                var cardPriceSubtext = card.Value<string>("pricingCardPriceSub");

                            <div class="price-card">
                                @if (banner)
                                {
                                    <div class="price-card__banner">
                                        <p>Mest</p>
                                        <p>populære</p>
                                    </div>
                                }
                                <div class="price-card__dots">
                                    @{
                                        if (Int32.TryParse(pricingCardV, out int v))
                                        {
                                            for (var i = 0; i < v; i++)
                                            {
                                                <div class="price-card__dots-dot"></div>
                                            }
                                        }
                                    }
                                </div>
                                <h3 class="price-card__title">
                                    @cardTitle
                                </h3>
                                <h2 class="price-card__price">
                                    @cardPrice
                                </h2>
                                <p class="price-card__price-sub">
                                    @cardPriceSubtext
                                </p>
                                <button class="price-card__btn" value="@v" onclick="GFG_click(this.value, @cardPrice)">Vælg</button>
                                <p class="price-card__description">
                                    @cardDescription
                                </p>

                                <span class="price-card__subtext">
                                    @cardBindingInfo
                                </span>

                            </div>
                            }

                        </div>
                        <p>@Model.Value("paymentRegularTextBellowCards")</p>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="column-container column-7">
                    <div class="column">
                        <p style="font-size:@sectionTitleSize"><strong>@Model.Value("paymentRegularSectionTitle")</strong></p>
                        @Model.Value("paymentRegularSectionDescription")
                    </div>
                </div>
                <div class="column-container">
                    <div class="column">
                        <img class="content-image" src="/media/2409/payment.svg" alt="Payment">
                    </div>
                </div>
            </div>

        </div>
    </section>
</main>


<script src="https://sdk.paylike.io/6.js"></script>
<script src="~/scripts/startupcental.js"></script>
<script>
    var con = @Request.QueryString["concentletters"];
    $(document).ready(ContactSync());

    function GFG_click(clicked, valueSub) {
        var paylike = Paylike('@System.Configuration.ConfigurationManager.AppSettings["StartupCentral.Paylike.PublicKey"]', { style: false });
        paylike.popup({
            title: 'Add card',
            description: 'Please enter your card details',
        }, function (err, r) {
            $.ajax({
                type: "POST",
                url: location.origin + "/umbraco/api/upodiapi/savepaymentmethod",
                data: {
                    UserId: '@Request.QueryString["memberkey"]',
                    Token: r.card.id,
                    PromoKode: '@Request.QueryString["promokode"]',
                    SubscriptionType: clicked
                },
                success: function (data) {
                    fbq('track', 'Purchase', {
                                       value: valueSub,
                                       currency: 'DKK',
                        });
                    console.log('fbq');

                    if (con == true) {
                        startupCentral.postRequestData('/umbraco/api/ActivecampaignApi/Contact_sync', {},
                        function (data) {
                            if (data) {
                                if (data.Success) {
                                    console.log('Contact_sync contact Synced');
                                }
                            }
                        });
                    } else {
                        startupCentral.postRequestData('/umbraco/api/ActivecampaignApi/Contact_sync_nomarketingmember', {},
                        function (data) {
                            if (data) {
                                if (data.Success) {
                                    console.log('Contact_sync_nomarketingmember contact Synced');
                                }
                            }
                        });
                    }

                    window.location.href = "/betaling/gennemfort/";
                }
            });
        });
    }

    function ContactSync() {
        if (con == true) {
            startupCentral.postRequestData('/umbraco/api/ActivecampaignApi/Contact_fejletsignup', {},
            function (data) {
                if (data) {
                    if (data.Success) {
                        console.log('Contact_fejletsignup contact Synced.');
                    }
                }
            });
        } else {
            startupCentral.postRequestData('/umbraco/api/ActivecampaignApi/Contact_fejletsignup_nomarketing', {},
            function (data) {
                if (data) {
                    if (data.Success) {
                        console.log('Contact_fejletsignup_nomarketing contact Synced.');
                    }
                }
            });
        }
    }
</script>


<style>
    #sc-navbar-logged, #sc-navbar-main, #sc-newsletter, #main-footer {
        display: none;
    }
</style>